syntax = "proto3";


import "google/protobuf/duration.proto";

package capper;

option go_package = "github.com/chancez/capper/proto/capper";

service Capper {
  rpc Capture(CaptureRequest) returns (stream CaptureResponse) {}
}

message CaptureRequest {
  string filter = 1;
  uint64 num_packets = 2;
  google.protobuf.Duration duration = 3;
  repeated string interface = 4;
  int64 snaplen = 5;
  K8sPodFilter k8s_pod_filter = 7;
  bool no_promiscuous_mode = 8;
  int64 buffer_size = 9;
  string node_name = 10;
}

message K8sPodFilter {
  string namespace = 1;
  string pod = 2;
}

message CaptureResponse {
  bytes data = 1;
}
